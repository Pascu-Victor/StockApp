@model StockAppWeb.Views.Alerts.IndexModel
@{
    ViewData["Title"] = "Alerts";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-10">
            <h2>Stock Alerts</h2>

            @if (!string.IsNullOrEmpty(TempData["ErrorMessage"] as string))
            {
                <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
            }

            @if (!string.IsNullOrEmpty(TempData["SuccessMessage"] as string))
            {
                <div class="alert alert-success">@TempData["SuccessMessage"]</div>
            }

            @if (!string.IsNullOrEmpty(Model.ErrorMessage))
            {
                <div class="alert alert-danger">@Model.ErrorMessage</div>
            }

            <!-- Create New Alert Form -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5>Create New Alert</h5>
                    @if (!string.IsNullOrEmpty(Model.SelectedStockName))
                    {
                        <small class="text-muted">For stock: <strong>@Model.SelectedStockName</strong></small>
                    }
                </div>
                <div class="card-body">
                    <form asp-controller="Alerts" asp-action="CreateAlert" method="post">
                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label for="StockName">Stock Name</label>
                                    <input type="text" class="form-control" name="StockName" 
                                           value="@Model.SelectedStockName" placeholder="Stock Name" required />
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label for="Name">Alert Name</label>
                                    <input type="text" class="form-control" name="Name" 
                                           placeholder="Alert Name" required />
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label for="LowerBound">Min Price</label>
                                    <input type="number" step="0.01" class="form-control" name="LowerBound" 
                                           placeholder="Min" required />
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label for="UpperBound">Max Price</label>
                                    <input type="number" step="0.01" class="form-control" name="UpperBound" 
                                           placeholder="Max" required />
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label>&nbsp;</label>
                                    <div>
                                        <button type="submit" class="btn btn-primary">Add Alert</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <input type="hidden" name="ToggleOnOff" value="true" />
                    </form>
                </div>
            </div>

            <!-- Alerts List -->
            @if (Model.Alerts.Count == 0)
            {
                <div class="alert alert-info">No alerts found.</div>
            }
            else
            {
                <div class="card">
                    <div class="card-header">
                        <h5>Your Alerts</h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Stock</th>
                                        <th>Alert Name</th>
                                        <th>Min Price</th>
                                        <th>Max Price</th>
                                        <th>Active</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var alert in Model.Alerts)
                                    {
                                        <tr>
                                            <form asp-controller="Alerts" asp-action="UpdateAlert" method="post" class="alert-form">
                                                <input type="hidden" name="AlertId" value="@alert.AlertId" />
                                                <td>
                                                    <input type="text" class="form-control form-control-sm" 
                                                           name="StockName" value="@alert.StockName" />
                                                </td>
                                                <td>
                                                    <input type="text" class="form-control form-control-sm" 
                                                           name="Name" value="@alert.Name" />
                                                </td>
                                                <td>
                                                    <input type="number" step="0.01" class="form-control form-control-sm" 
                                                           name="LowerBound" value="@alert.LowerBound" />
                                                </td>
                                                <td>
                                                    <input type="number" step="0.01" class="form-control form-control-sm" 
                                                           name="UpperBound" value="@alert.UpperBound" />
                                                </td>
                                                <td>
                                                    <div class="form-check">
                                                        <input type="checkbox" class="form-check-input" 
                                                               name="ToggleOnOff" value="true" 
                                                               @(alert.ToggleOnOff ? "checked" : "") />
                                                        <input type="hidden" name="ToggleOnOff" value="false" />
                                                        <label class="form-check-label">Active</label>
                                                    </div>
                                                </td>
                                                <td>
                                                    <div class="btn-group" role="group">
                                                        <button type="submit" class="btn btn-sm btn-success" title="Update">
                                                            <i class="fas fa-save"></i> Update
                                                        </button>
                                                        <button type="button" class="btn btn-sm btn-danger" title="Delete"
                                                                onclick="deleteAlert(@alert.AlertId)">
                                                            <i class="fas fa-trash"></i> Delete
                                                        </button>
                                                    </div>
                                                </td>
                                            </form>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Action Buttons Sidebar -->
        <div class="col-md-2">
            <div class="card">
                <div class="card-header">
                    <h6>Actions</h6>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <a href="javascript:history.back()" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Back
                        </a>
                        @if (Model.Alerts.Count > 0)
                        {
                            <button type="button" class="btn btn-info" onclick="saveAllAlerts()">
                                <i class="fas fa-save"></i> Save All
                            </button>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Hidden form for delete operations -->
<form id="deleteForm" asp-controller="Alerts" asp-action="DeleteAlert" method="post" style="display: none;">
    <input type="hidden" id="deleteAlertId" name="alertId" />
</form>

<script>
    function deleteAlert(alertId) {
        if (confirm('Are you sure you want to delete this alert?')) {
            document.getElementById('deleteAlertId').value = alertId;
            document.getElementById('deleteForm').submit();
        }
    }

    function saveAllAlerts() {
        // Get all alert forms
        var forms = document.querySelectorAll('.alert-form');
        var alerts = [];
        
        forms.forEach(function(form) {
            var formData = new FormData(form);
            var alert = {
                AlertId: formData.get('AlertId'),
                StockName: formData.get('StockName'),
                Name: formData.get('Name'),
                LowerBound: parseFloat(formData.get('LowerBound')),
                UpperBound: parseFloat(formData.get('UpperBound')),
                ToggleOnOff: formData.get('ToggleOnOff') === 'true'
            };
            alerts.push(alert);
        });

        // Create a form to submit all alerts
        var saveForm = document.createElement('form');
        saveForm.method = 'POST';
        saveForm.action = '@Url.Action("SaveAllAlerts", "Alerts")';
        
        // Add CSRF token
        var token = document.querySelector('input[name="__RequestVerificationToken"]');
        if (token) {
            var tokenInput = document.createElement('input');
            tokenInput.type = 'hidden';
            tokenInput.name = '__RequestVerificationToken';
            tokenInput.value = token.value;
            saveForm.appendChild(tokenInput);
        }

        // Add alerts data
        alerts.forEach(function(alert, index) {
            Object.keys(alert).forEach(function(key) {
                var input = document.createElement('input');
                input.type = 'hidden';
                input.name = `alerts[${index}].${key}`;
                input.value = alert[key];
                saveForm.appendChild(input);
            });
        });

        document.body.appendChild(saveForm);
        saveForm.submit();
    }
</script> 